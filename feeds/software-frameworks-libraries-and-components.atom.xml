<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Bug Alert - Software Frameworks, Libraries, and Components</title><link href="https://bugalert.org/" rel="alternate"></link><link href="https://bugalert.org/feeds/software-frameworks-libraries-and-components.atom.xml" rel="self"></link><id>https://bugalert.org/</id><updated>2022-03-30T15:00:00+00:00</updated><subtitle>A nonprofit service for alerting security and IT professionals of high-impact and 0day vulnerabilities.</subtitle><entry><title>Confirmed remote code execution (RCE) in Spring Core, an extremely popular Java framework (CVE-2022-22965)</title><link href="https://bugalert.org/content/notices/2022-03-30-spring.html" rel="alternate"></link><published>2022-03-30T15:00:00+00:00</published><updated>2022-03-30T15:00:00+00:00</updated><author><name>Bug Alert Contributors</name></author><id>tag:bugalert.org,2022-03-30:/content/notices/2022-03-30-spring.html</id><summary type="html">&lt;p&gt;Praetorian has confirmed that a remote code execution vulnerability exists in Spring, an extremely popular Java framework. How broadly this impacts the Spring ecosystem remains unclear. The flaw has been assigned a bug alert severity of 'critical'.&lt;/p&gt;</summary><content type="html">&lt;h4&gt;Updated Notice, 10:00AM New York Time&lt;/h4&gt;
&lt;p&gt;This flaw has been assigned CVE-2022-22965, and the Spring team is now issuing fixes. &lt;a href="https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement"&gt;Please follow their post here for further updates&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Original Notice&lt;/h4&gt;
&lt;p&gt;This is &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt; related to CVE-2022-22963, Spring Cloud Function, or SpEL routing expressions. That is a separate, (possibly?) less widespread issue &lt;a href="https://tanzu.vmware.com/security/cve-2022-22963"&gt;documented here&lt;/a&gt;. Sadly, both are being referred to broadly as 'Spring4Shell', significantly adding to the confusion. We suggest the community refrain from using the term.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.praetorian.com/blog/spring-core-jdk9-rce/"&gt;Praetorian has confirmed the existence of the remote code execution vulnerability that impacts Spring Core.&lt;/a&gt; Praetorian has also confirmed online rumors of the issue being caused by a partial fix to a very old issue, &lt;a href="http://blog.o0o.nu/2010/06/cve-2010-1622.html"&gt;CVE-2010-1622&lt;/a&gt;. Unfortunately, proof-of-concept code is now widely available and is likely to be weaponized. What we don't know, though, is how widespread this issue really is, or how easily exploited it will be in the real world. As of late in the evening on March 30th, New York time, there's not much evidence yet that it will be exploitable in common configurations.&lt;/p&gt;
&lt;p&gt;There is currently no patch. The existing proof-of-concept, as well as the proof-of-concept from 2010, both reference &lt;code&gt;class.module.classLoader&lt;/code&gt; when constructing the attack. Bug Alert therefore recommends testing and deploying a WAF rule that analyzes request bodies for requests containing the term &lt;code&gt;classLoader&lt;/code&gt;. Please remember that regex-based WAF rules are often easily bypassed, so do not regard this as a long-term solution.&lt;/p&gt;
&lt;p&gt;Continue to monitor the Praetorian blog and the Bug Alert discussion thread (linked below) for further information. Once available, official notice from the Spring project is likely to be placed on the &lt;a href="https://tanzu.vmware.com/security/"&gt;VMware Tanzu security advisories page&lt;/a&gt; (VMware owns the Spring project). It's likely they will also &lt;a href="https://spring.io/blog"&gt;furnish a blog post&lt;/a&gt; with further information at a later time.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.rapid7.com/blog/post/2022/03/30/spring4shell-zero-day-vulnerability-in-spring-framework/"&gt;Rapid7 has put together a fantastic writeup with technical details&lt;/a&gt;. Their blog post also details some of the configurations that are required for the exploit to be successful, and they have committed to using that venue to provide additional information as it becomes available.&lt;/p&gt;
&lt;p&gt;If you have feedback or questions, please comment on the discussion thread linked below. This notice cost the project approximately $150 USD to send. If you would like to support the project, &lt;a href="https://bugalert.org/content/pages/financial-support.html"&gt;you can learn more here&lt;/a&gt;&lt;/p&gt;</content><category term="Software Frameworks, Libraries, and Components"></category><category term="Java"></category><category term="Spring"></category><category term="Critical Severity"></category><category term="CVE-2010-1622"></category><category term="CVE-2022-22965"></category></entry><entry><title>Advanced warning: possible remote code execution (RCE) in Spring, an extremely popular Java framework</title><link href="https://bugalert.org/content/notices/2022-03-29-spring.html" rel="alternate"></link><published>2022-03-29T23:00:00+00:00</published><updated>2022-03-29T23:00:00+00:00</updated><author><name>Bug Alert Contributors</name></author><id>tag:bugalert.org,2022-03-29:/content/notices/2022-03-29-spring.html</id><summary type="html">&lt;p&gt;An unconfirmed, but possible, remote code execution vulnerability is believed to exist in Spring, an extremely popular Java framework. This issue is likely easily exploited in common configurations. If confirmed, another notice will be sent out with a severity of 'critical'. While unconfirmed, the severity has been assigned 'high'.&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Update as of March 30th, 3:00PM New York time&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.praetorian.com/blog/spring-core-jdk9-rce/"&gt;Praetorian has confirmed the existence of this RCE in a recently-published blog post.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/content/notices/2022-03-30-spring.html"&gt;A new Bug Alert notice has been added here.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Update as of March 30th, 1:30PM New York time&lt;/h2&gt;
&lt;p&gt;The Bug Alert team is aware of claims of a PoC for a Spring core RCE. However, we are awaiting confirmation before raising any further alarms, and we have not been able to utilize the PoC successfully against real-world Spring installs that we have (legal) access to. Some security professionals have claimed, on Twitter, that they are able to utilize the PoC successfully against Spring instances running behind Tomcat.&lt;/p&gt;
&lt;p&gt;Adding to the confusion, multiple Spring devs have publicly stated there is no known vulnerability within Spring Core, and they have also stated that yesterday's serialization-related code change &lt;em&gt;was not&lt;/em&gt; an attempt a resolving an open security issue.&lt;/p&gt;
&lt;p&gt;We'll share any further info as it comes in, but at this time we are taking a cautious approach with raising any further alarms. This is already a deeply confusing situation, and Bug Alert wants to avoid making it worse.&lt;/p&gt;
&lt;p&gt;Finally, we would like to remind readers that Bug Alert is intended to be one of the earliest sources of information, and we have to weigh the risks of being early, but being wrong. This may very well end up being a case where we are wrong, but in the moment it is hard to know what is accurate. We will continue to monitor the situation and report on new developments.&lt;/p&gt;
&lt;h2&gt;Original notice&lt;/h2&gt;
&lt;p&gt;This notice is intended to alert you that there &lt;em&gt;may&lt;/em&gt; be a significant issue with Spring which, if confirmed, would require immediate attention.&lt;/p&gt;
&lt;p&gt;In the morning (New York time) on Tuesday, March 29th, 2022, a member of the security research team KnownSec posted a now-removed screenshot to Twitter purporting to show a trivially-exploited remote code execution vulnerability against Spring core, the most popular Java framework in use on the Internet. The researcher did not provide a proof-of-concept or public details. Since then, the Bug Alert team has been very closely monitoring activity and discussion in the Spring ecosystem.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Update: the claims in the next paragraph have been refuted by the Spring team. I have left them visible for historical context.&lt;/em&gt;&lt;/strong&gt;
&lt;del&gt;During our initial investigation, the Bug Alert volunteer team noted that a &lt;a href="https://github.com/spring-projects/spring-framework/commit/7f7fb58dd0dae86d22268a4b59ac7c72a6c22529#diff-6c2618839eda075efe4491842d3673eab8fe1e342f6d9ddc2bbda8556e595864L153"&gt;small change was introduced into the Spring codebase at roughly the same time&lt;/a&gt; which may be the patch for this particular remote code execution issue. The team believes RCE could be possible through this vector, and that this change is likely the change that is intended to resolve the issue in Spring. However, the Spring team has not yet commented and has locked/closed GitHub issues inquiring about the accuracy of the claims being made.&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;Just a few minutes ago, Cyber Kendra, a cybersecurity blog, &lt;a href="https://www.cyberkendra.com/2022/03/springshell-rce-0-day-vulnerability.html"&gt;put up a new post&lt;/a&gt; detailing (translated) claims that have been circulating on Chinese blogs and media for the past several hours. This post also details some of the (unconfirmed) ways this vulnerability could be detected or mitigated.&lt;/p&gt;
&lt;p&gt;This notice is intended to prepare you for the possibility that a trivially-exploited remote code execution vulnerability may be present in one of the most widely-used pieces of open-source software. The impact of this vulnerability, if it does exist, would be significant; far in excess of the impact of Log4j or Heartbleed.&lt;/p&gt;
&lt;p&gt;If you have feedback (did you agree/disagree that a notice should have been sent?) or questions, please comment on the discussion thread linked below. This notice cost the project approximately $50 USD to send. If you would like to support the project, &lt;a href="https://bugalert.org/content/pages/financial-support.html"&gt;you can learn more here&lt;/a&gt;.&lt;/p&gt;</content><category term="Software Frameworks, Libraries, and Components"></category><category term="Java"></category><category term="Spring"></category><category term="High Severity"></category></entry><entry><title>RCE in Log4j</title><link href="https://bugalert.org/content/notices/2021-12-09-log4j.html" rel="alternate"></link><published>2021-12-09T23:00:00+00:00</published><updated>2021-12-09T23:00:00+00:00</updated><author><name>Bug Alert Contributors</name></author><id>tag:bugalert.org,2021-12-09:/content/notices/2021-12-09-log4j.html</id><summary type="html">&lt;p&gt;A remote code execution vulnerability has been found in the popular Java logging library Log4j. This issue is easily exploited in common configurations, and has been assigned a bug alert severity of 'critical'.&lt;/p&gt;</summary><content type="html">&lt;p&gt;On Tuesday, December 9th, 2021, a security researcher posted a screenshot and proof-of-concept code for executing an RCE against the latest available build of the popular Java logging library, Log4j. For up-to-date information, please visit &lt;a href="https://www.lunasec.io/docs/blog/log4j-zero-day/"&gt;https://www.lunasec.io/docs/blog/log4j-zero-day/&lt;/a&gt;.&lt;/p&gt;</content><category term="Software Frameworks, Libraries, and Components"></category><category term="Java"></category><category term="Log4j"></category><category term="Critical Severity"></category></entry></feed>